<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pmsj.cinema.common.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.pmsj.cinema.common.entity.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_socre" jdbcType="INTEGER" property="userSocre" />
    <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="user_comment" jdbcType="LONGVARCHAR" property="userComment" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="user_name" property="userName" />
    <result column="user_photo" property="userPhoto" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pmsj.cinema.common.entity.Comment">
    insert into comment ( user_id, user_socre,
    comment_create_time, movie_id,
      user_comment,like_count)
    values (#{userId,jdbcType=INTEGER}, #{userSocre,jdbcType=INTEGER}, #{commentCreateTime,jdbcType=TIMESTAMP}, #{movieId,jdbcType=INTEGER},
      #{userComment,jdbcType=LONGVARCHAR},
      #{likeCount,jdbcType=INTEGER})
  </insert>
  <update id="updateLikeCount" parameterType="com.pmsj.cinema.common.entity.Comment">
    update comment
    set like_count = #{likeCount,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select comment, user_id, user_socre, father_id, comment_create_time, movie_id, user_comment
    from comment
    where comment = #{comment,jdbcType=INTEGER}
  </select>
  <select id="selectAllByMovie" resultMap="BaseResultMap">
    SELECT c.*,u.user_name,u.user_photo
    FROM COMMENT c
    LEFT JOIN
    USER u
    ON
    c.user_id=u.user_id
    WHERE movie_id=#{movieId,jdbcType=INTEGER}
    ORDER BY like_count DESC
    LIMIT 10
  </select>
    <select id="getHasComment" resultType="java.lang.Integer">

      SELECT COUNT(*) FROM COMMENT
    WHERE user_id = #{userId}
    AND movie_id = #{movieId}
    </select>
</mapper>